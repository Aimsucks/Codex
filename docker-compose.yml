services:
  postgres:
    image: postgres:13-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      TZ: America/New_York
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks: [internal]

  codex:
    image: ghcr.io/aimsucks/codex:latest
    container_name: codex
    restart: unless-stopped
    environment:
      TZ: America/New_York
      DATABASE_URL: ${DATABASE_URL}
      AUTH_URL: ${AUTH_URL}
      AUTH_SECRET: ${AUTH_SECRET}
      AUTH_DISCORD_ID: ${AUTH_DISCORD_ID}
      AUTH_DISCORD_SECRET: ${AUTH_DISCORD_SECRET}
    depends_on: [postgres]
    networks: [proxy, internal]
    labels:
      traefik.enable: true
      traefik.http.routers.codex.rule: Host(`${CODEX_URL}`)
      traefik.http.routers.codex.entrypoints: websecure
      traefik.http.routers.codex.tls: true
      traefik.http.routers.codex.tls.certresolver: letencrypt
      traefik.http.services.codex.loadbalancer.server.port: 3000

volumes:
  postgres-data:

networks:
  proxy:
    name: proxy
  internal:
    name: internal